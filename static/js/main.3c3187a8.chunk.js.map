{"version":3,"sources":["model/searchIndex.ts","components/ToolBarList.tsx","components/Description.tsx","components/DoYouKnow.tsx","model/tag.ts","components/AllDataTable.tsx","pages/Index.tsx","components/Page.tsx","pages/Prerendered.tsx","components/LanguageButton.tsx","components/AppBar.tsx","components/SearchList.tsx","pages/Why.tsx","pages/How.tsx","App.tsx","reportWebVitals.ts","i18n.ts","index.tsx"],"names":["searchOptions","keys","name","weight","Store","items","fuse","this","Fuse","whatStore","Map","fetchSearchIndex","language","a","has","fetch","process","response","json","store","set","get","ToolBarList","history","useHistory","useTranslation","t","i18n","useState","setItems","useEffectOnce","then","it","List","ListItem","button","component","onClick","replace","ListItemIcon","ListItemText","primary","selectedItem","Math","floor","random","length","path","Divider","Description","languageItems","setLanguageItems","Typography","variant","gutterBottom","useStyles","makeStyles","root","maxWidth","marginBottom","title","fontSize","DoYouKnow","promote","doYouKnow","setDoYouKnow","filter","startsWith","setInterval","classes","Card","className","CardContent","color","CardActions","Button","size","disableElevation","TagColor","container","table","row","cursor","background","tag","display","padding","borderRadius","marginRight","fontWeight","height","lineHeight","AllDataTable","data","setData","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","map","scope","category","tags","style","Index","fallback","Page","prop","html","setHtml","decodeURIComponent","page","text","newHtml","dangerouslySetInnerHTML","__html","Prerendered","useParams","theme","languageName","breakpoints","down","LanguageButton","anchorEl","setAnchorEl","closeMenu","changeLanguage","languageCode","window","location","reload","aria-controls","aria-haspopup","event","currentTarget","console","error","getLanguageName","id","keepMounted","open","Boolean","onClose","MenuItem","toolbar","paddingRight","flexGrow","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","up","menuButtonHidden","search","position","shape","backgroundColor","fade","palette","common","white","spacing","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","AppBar","handleDrawerOpen","onSearch","clsx","Toolbar","IconButton","edge","noWrap","InputBase","placeholder","input","inputProps","onChange","target","value","href","createStyles","paper","notFound","SearchList","to_search","setStore","searchResult","item","Why","How","toolbarIcon","mixins","drawerPaper","whiteSpace","drawerPaperClose","overflowX","appBarSpacer","content","overflow","paddingTop","paddingBottom","flexDirection","fixedHeight","backdrop","App","innerWidth","setOpen","setSearch","CssBaseline","Drawer","Backdrop","Container","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","backend","loadPath","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c3187a8.chunk.js","sourcesContent":["import Fuse from \"fuse.js\";\n\nexport interface SearchIndex {\n    name: string,\n    aliases: Array<string>,\n    tags: Array<string>,\n    category: string,\n    content_for_search: string,\n    path: string\n}\n\nconst searchOptions = {\n    keys: [{\n        name: 'name',\n        weight: 0.45\n    }, {\n        name: 'aliases',\n        weight: 0.4\n    }, {\n        name: 'content_for_search',\n        weight: 0.15\n    }],\n}\n\nexport class Store {\n    public readonly fuse: Fuse<SearchIndex>;\n\n    constructor(public readonly items: Array<SearchIndex>) {\n        this.fuse = new Fuse(items, searchOptions);\n    }\n}\n\nexport let whatStore: Map<string, Store> = new Map();\n\nexport async function fetchSearchIndex(language: string) {\n    if (!whatStore.has(language)) {\n        const response = await fetch(process.env.PUBLIC_URL + `/data/${language}/index.json`);\n        const store = new Store(await response.json());\n        whatStore.set(language, store);\n    }\n    return whatStore.get(language);\n}\n\n","import {Divider, List, ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport HomeIcon from '@material-ui/icons/Home';\nimport CasinoIcon from '@material-ui/icons/Casino';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport HelpIcon from '@material-ui/icons/Help';\nimport InfoIcon from '@material-ui/icons/Info';\nimport RoomIcon from '@material-ui/icons/Room';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport {fetchSearchIndex, SearchIndex} from \"../model/searchIndex\";\nimport {useEffectOnce} from \"react-use\";\nimport {useHistory} from \"react-router\";\n\nexport function ToolBarList() {\n    const history = useHistory();\n    const {t, i18n} = useTranslation();\n    const [items, setItems] = useState<Array<SearchIndex>>([]);\n    useEffectOnce(() => {\n        fetchSearchIndex(i18n.language).then(it => {\n            setItems(it!.items);\n        });\n    });\n    return (\n        <List>\n            <ListItem button component=\"a\" onClick={() => {\n                history.replace(`/`)\n            }}>\n                <ListItemIcon>\n                    <HomeIcon/>\n                </ListItemIcon>\n                <ListItemText primary={t('Home')}/>\n            </ListItem>\n            <ListItem button component=\"a\" onClick={() => {\n                const selectedItem = items[Math.floor(Math.random() * items.length)];\n                history.replace(`/prerendered/${selectedItem?.path}`)\n            }}>\n                <ListItemIcon>\n                    <CasinoIcon/>\n                </ListItemIcon>\n                <ListItemText primary={t('Random')}/>\n            </ListItem>\n            <Divider/>\n            <ListItem button onClick={() => history.replace(`/how`)}>\n                <ListItemIcon>\n                    <FormatListNumberedIcon/>\n                </ListItemIcon>\n                <ListItemText primary={t('How')}/>\n            </ListItem>\n            <ListItem button onClick={() => history.replace(`/why`)}>\n                <ListItemIcon>\n                    <HelpIcon/>\n                </ListItemIcon>\n                <ListItemText primary={t('Why')}/>\n            </ListItem>\n            <ListItem button>\n                <ListItemIcon>\n                    <RoomIcon/>\n                </ListItemIcon>\n                <ListItemText primary={t('Where')}/>\n            </ListItem>\n            <ListItem button>\n                <ListItemIcon>\n                    <QuestionAnswerIcon/>\n                </ListItemIcon>\n                <ListItemText primary={t('WhatIf')}/>\n            </ListItem>\n            <Divider/>\n            <ListItem button component=\"a\" onClick={() => {\n                history.replace(`/prerendered/about%2Findex.htmlpart`)\n            }}>\n                <ListItemIcon>\n                    <InfoIcon/>\n                </ListItemIcon>\n                <ListItemText primary={t('Info')}/>\n            </ListItem>\n        </List>\n    );\n}","import React, {useState} from \"react\";\nimport {Typography} from \"@material-ui/core\";\nimport {fetchSearchIndex, SearchIndex} from \"../model/searchIndex\";\nimport {useTranslation} from \"react-i18next\";\nimport {useEffectOnce} from \"react-use\";\n\nexport function Description() {\n    const {t, i18n} = useTranslation();\n    let [languageItems, setLanguageItems] = useState<Array<SearchIndex>>([]);\n    useEffectOnce(() => {\n        fetchSearchIndex(i18n.language).then(it => setLanguageItems(it!.items));\n    });\n    return (\n        <div>\n            <Typography variant=\"h3\" component=\"h4\" gutterBottom>\n                Welcome to Tipedia\n            </Typography>\n            <Typography variant=\"h6\" gutterBottom>\n                the free encyclopedia for TiDB and related works\n            </Typography>\n            <Typography gutterBottom>\n                {t(\"All\")} {languageItems.length} {t(\"items\")}\n            </Typography>\n        </div>\n    );\n}","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {useTranslation} from \"react-i18next\";\nimport {fetchSearchIndex, SearchIndex} from '../model/searchIndex';\nimport {useEffectOnce} from 'react-use';\nimport {useHistory} from \"react-router\";\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 600,\n        marginBottom: 40,\n    },\n    title: {\n        fontSize: 14,\n    },\n});\n\nexport default function DoYouKnow({variant, promote}: { variant: string, promote: string }) {\n    const {t, i18n} = useTranslation();\n    const history = useHistory();\n    const [doYouKnow, setDoYouKnow] = useState<SearchIndex | null>(null);\n    useEffectOnce(() => {\n            fetchSearchIndex(i18n.language).then(it => {\n                const items = it?.items.filter(it => it.path.startsWith(variant)) || [];\n                setDoYouKnow(items[Math.floor(Math.random() * items.length)]);\n                setInterval((() => {\n                    setDoYouKnow(items[Math.floor(Math.random() * items.length)]);\n                }), 3000);\n            });\n        }\n    );\n\n    const classes = useStyles();\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                    {t(\"DoYouKnow\")}\n                </Typography>\n                <Typography>\n                    {t(promote)}\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                    {doYouKnow?.name}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\"\n                        variant=\"contained\"\n                        onClick={() => {\n                            history.replace(`/prerendered/${doYouKnow?.path}`)\n                        }}\n                        disableElevation>\n                    {t(\"FindOutHere\")}\n                </Button>\n            </CardActions>\n        </Card>\n    );\n}\n","export const TagColor = new Map(\n    [\n        [\"TiDB\",\"#37cad9\"],\n        [\"TiKV\",\"#f83700\"],\n        [\"PD\",\"#37cad9\"],\n        [\"txn\",\"#f8a945\"],\n        [\"sig/txn\",\"#f8a945\"],\n        [\"搞笑\",\"#ffff00\"],\n    ],\n);","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from '@material-ui/core';\nimport {useTranslation} from \"react-i18next\";\nimport {useHistory} from \"react-router\";\nimport {fetchSearchIndex, SearchIndex} from \"../model/searchIndex\";\nimport {useEffectOnce} from \"react-use\";\nimport {TagColor} from \"../model/tag\";\n\nconst useStyles = makeStyles({\n    container: {\n        maxWidth: 650,\n    },\n    table: {\n        maxWidth: 650,\n    },\n    row: {\n        cursor: \"pointer\",\n        '&:hover': {\n            background: \"#f1f1f1\",\n        },\n    },\n    tag: {\n        display: \"inline-block\",\n        color: \"white\",\n        padding: 4,\n        borderRadius: 4,\n        marginRight: 4,\n        fontWeight: \"bold\",\n        height: 26,\n        lineHeight: \"20px\",\n    }\n});\n\nexport default function AllDataTable({variant}: { variant: string }) {\n    const classes = useStyles();\n    const {t, i18n} = useTranslation();\n    const history = useHistory();\n    const [data, setData] = useState<Array<SearchIndex>>([]);\n    useEffectOnce(() => {\n            fetchSearchIndex(i18n.language).then(it => {\n                const items = it?.items.filter(it => it.path.startsWith(variant)) || [];\n                setData(items);\n            });\n        }\n    );\n\n    return (\n        <TableContainer component={Paper} className={classes.container}>\n            <Table className={classes.table} aria-label=\"table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>{t(\"Name\")}</TableCell>\n                        <TableCell>{t(\"Category\")}</TableCell>\n                        <TableCell>{t(\"Tags\")}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data.map((row) => (\n                        <TableRow className={classes.row} key={row.name} onClick={() => {\n                            history.replace(`/prerendered/${row.path}`)\n                        }}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.name}\n                            </TableCell>\n                            <TableCell>{t(row.category)}</TableCell>\n                            <TableCell>{row.tags.map((tag) =>\n                                <span className={classes.tag}\n                                      key={tag}\n                                      style={{background: TagColor.get(tag) || \"gray\"}}>{tag}</span>\n                            )}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}","import React, {Suspense} from \"react\";\nimport {Description} from \"../components/Description\";\nimport DoYouKnow from \"../components/DoYouKnow\";\nimport AllDataTable from \"../components/AllDataTable\";\n\nexport function Index() {\n    return (\n        <Suspense fallback=\"loading\">\n            <Description/>\n            <DoYouKnow variant={\"what\"} promote={\"DoYouKnowWhatIs\"}/>\n            <DoYouKnow variant={\"how\"} promote={\"DoYouKnowHowTo\"}/>\n            <DoYouKnow variant={\"why\"} promote={\"DoYouKnowWhy\"}/>\n            <AllDataTable variant={\"what\"}/>\n        </Suspense>\n    )\n}","import React, {useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nexport function Page(prop: { path: string }) {\n    const [html, setHtml] = useState(\"\");\n    const {i18n} = useTranslation();\n    const path = decodeURIComponent(prop.path);\n    (async () => {\n        let page = await fetch(process.env.PUBLIC_URL + `/data/${i18n.language}/${path}`);\n        let newHtml = await page.text();\n        setHtml(newHtml);\n    })();\n    return (\n        <div className=\"page\" dangerouslySetInnerHTML={{__html: html}}/>\n    );\n}\n","import {useParams} from \"react-router\";\nimport {Page} from \"../components/Page\";\nimport React, {Suspense} from \"react\";\n\nexport function Prerendered() {\n    let {path} = useParams<{ path: string }>();\n    return (\n        <Suspense fallback=\"loading\">\n            <Page path={path}/>\n        </Suspense>\n    )\n}","import {Button, Menu, MenuItem} from \"@material-ui/core\";\nimport TranslateIcon from \"@material-ui/icons/Translate\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport React, {useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n    languageName: {\n        [theme.breakpoints.down('xs')]: {\n            display: \"none\"\n        },\n    },\n}));\nexport function LanguageButton() {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const {i18n} = useTranslation();\n\n    const handleClick = (event: any) => setAnchorEl(event.currentTarget);\n    const closeMenu = () => {\n        setAnchorEl(null);\n    }\n    const changeLanguage = (languageCode: string) => {\n        if (languageCode !== null) {\n            i18n.changeLanguage(languageCode).then(() => window.location.reload());\n        }\n        closeMenu();\n    };\n    const getLanguageName = (languageCode: string) => {\n        switch (languageCode) {\n            case \"zh\":\n            case \"zh-CN\":\n                return \"中文\"\n            case \"en\":\n                return \"English\"\n            default:\n                console.error(languageCode);\n        }\n    };\n\n    return (\n        <>\n            <Button color=\"inherit\" aria-controls=\"language-menu\" aria-haspopup=\"true\"\n                    onClick={handleClick}>\n                <TranslateIcon/>\n                <span className={classes.languageName}>{getLanguageName(i18n.language)}</span>\n                <ExpandMoreIcon/>\n            </Button>\n            <Menu\n                id=\"language-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={closeMenu}\n            >\n                <MenuItem\n                    key=\"zh\"\n                    onClick={() => changeLanguage(\"zh\")}>\n                    中文\n                </MenuItem>\n                <MenuItem\n                    key=\"en\"\n                    onClick={() => changeLanguage(\"en\")}>\n                    English\n                </MenuItem>\n            </Menu>\n        </>\n    )\n}","import clsx from \"clsx\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {AppBar as MuiAppBar, fade, InputBase} from \"@material-ui/core\";\nimport React, {MouseEventHandler, Suspense} from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {LanguageButton} from \"./LanguageButton\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    toolbar: {\n        paddingRight: 24,\n        [theme.breakpoints.down('sm')]: {\n            paddingRight: 0,\n        },\n    },\n    title: {\n        flexGrow: 1,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        [theme.breakpoints.up('sm')]: {\n            marginRight: 36,\n        },\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: 'auto',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    }\n}));\n\ninterface Props {\n    handleDrawerOpen: MouseEventHandler<any>,\n    open: boolean,\n    onSearch: (_: string) => void\n}\n\nexport function AppBar({handleDrawerOpen, open, onSearch}: Props) {\n    const classes = useStyles();\n    return (\n        <MuiAppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n            <Toolbar className={classes.toolbar}>\n                <IconButton\n                    edge=\"start\"\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={handleDrawerOpen}\n                    className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n                >\n                    <MenuIcon/>\n                </IconButton>\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                    Tipedia\n                </Typography>\n                <Suspense fallback=\"loading\">\n                    <LanguageButton/>\n                </Suspense>\n                <div className={classes.search}>\n                    <div className={classes.searchIcon}>\n                        <SearchIcon/>\n                    </div>\n                    <InputBase\n                        placeholder=\"Search…\"\n                        classes={{root: classes.inputRoot, input: classes.inputInput}}\n                        inputProps={{'aria-label': 'search'}}\n                        onChange={event => onSearch(event.target.value)}\n                    />\n                </div>\n                <IconButton href=\"https://github.com/longfangsong/tipedia\" color=\"inherit\">\n                    <GitHubIcon/>\n                </IconButton>\n            </Toolbar>\n        </MuiAppBar>\n    )\n}","import React, {useState} from \"react\";\nimport {createStyles, List, ListItem, ListItemText, makeStyles, Theme} from \"@material-ui/core\";\nimport {useEffectOnce} from \"react-use\";\nimport {fetchSearchIndex, Store} from \"../model/searchIndex\";\nimport {useTranslation} from \"react-i18next\";\nimport {useHistory} from \"react-router\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            maxWidth: 360,\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.text.primary\n        },\n        notFound: {\n            color: \"#818181\"\n        }\n    }),\n);\n\nexport function SearchList({to_search}: { to_search: string }) {\n    const history = useHistory();\n    const {i18n} = useTranslation();\n    const [store, setStore] = useState<Store | null>(null);\n    const classes = useStyles();\n    useEffectOnce(() => {\n            fetchSearchIndex(i18n.language).then(it => {\n                setStore(it || null)\n            });\n        }\n    );\n\n    const items = () => {\n        const searchResult = store?.fuse.search(to_search);\n        if (searchResult?.length === 0) {\n            return <ListItem className={classes.notFound}>无结果</ListItem>\n        } else {\n            return (\n                <>\n                    {\n                        searchResult?.map(it => {\n                            return (\n                                <ListItem key={it.item.name} button component=\"a\"\n                                          onClick={() => {\n                                              history.replace(`/prerendered/${it.item.path}`)\n                                          }}>\n                                    <ListItemText primary={it.item.name}/>\n                                </ListItem>\n                            )\n                        })\n                    }\n                </>\n            );\n        }\n    }\n\n    return (\n        <List className={classes.root}>\n            {items()}\n        </List>\n    );\n}","import AllDataTable from \"../components/AllDataTable\";\nimport React, {Suspense} from \"react\";\n\nexport function Why() {\n    return (\n        <Suspense fallback={\"loading\"}>\n            <AllDataTable variant={\"why\"}/>\n        </Suspense>\n    );\n}","import AllDataTable from \"../components/AllDataTable\";\nimport React, {Suspense} from \"react\";\n\nexport function How() {\n    return (\n        <Suspense fallback={\"loading\"}>\n            <AllDataTable variant={\"how\"}/>\n        </Suspense>\n    );\n}","import React, {Suspense, useState} from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport {ToolBarList} from \"./components/ToolBarList\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {Index} from './pages/Index';\nimport {Prerendered} from \"./pages/Prerendered\";\nimport {AppBar} from \"./components/AppBar\";\nimport {SearchList} from './components/SearchList';\nimport {Backdrop} from \"@material-ui/core\";\nimport {Why} from \"./pages/Why\";\nimport {How} from './pages/How';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer - 1,\n        color: \"white\",\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n    const [open, setOpen] = useState(window.innerWidth > 420);\n    const [search, setSearch] = useState(\"\");\n    const handleDrawerOpen = () => setOpen(true);\n    const handleDrawerClose = () => setOpen(false);\n    const handleBackDropClose = () => setSearch(\"\");\n    return (\n        <Router>\n            <div className={classes.root}>\n                <CssBaseline/>\n                <AppBar handleDrawerOpen={handleDrawerOpen} open={open} onSearch={setSearch}/>\n                <Drawer variant=\"permanent\"\n                        classes={{paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)}} open={open}>\n                    <div className={classes.toolbarIcon}>\n                        <IconButton onClick={handleDrawerClose}>\n                            <ChevronLeftIcon/>\n                        </IconButton>\n                    </div>\n                    <Divider/>\n                    <Suspense fallback=\"loading\">\n                        <ToolBarList/>\n                    </Suspense>\n                </Drawer>\n                <main className={classes.content}>\n                    <Backdrop className={classes.backdrop} open={search !== \"\"} onClick={handleBackDropClose}>\n                        <Suspense fallback=\"loading\">\n                            <SearchList to_search={search}/>\n                        </Suspense>\n                    </Backdrop>\n                    <div className={classes.appBarSpacer}/>\n                    <Container maxWidth=\"lg\" className={classes.container}>\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <Index/>\n                            </Route>\n                            <Route exact path=\"/how\">\n                                <How/>\n                            </Route>\n                            <Route exact path=\"/why\">\n                                <Why/>\n                            </Route>\n                            <Route path=\"/prerendered/:path\">\n                                <Prerendered/>\n                            </Route>\n                        </Switch>\n                    </Container>\n                </main>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\ni18n.use(Backend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        fallbackLng: 'en',\n        debug: process.env.NODE_ENV === 'development',\n\n        interpolation: {\n            escapeValue: false,\n        },\n        backend: {\n            loadPath: process.env.PUBLIC_URL + '/locales/{{lng}}/{{ns}}.json',\n        }\n    });\n\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}