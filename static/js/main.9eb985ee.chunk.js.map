{"version":3,"sources":["model/searchIndex.ts","components/ToolBarList.tsx","components/Description.tsx","components/DoYouKnow.tsx","pages/Index.tsx","components/Page.tsx","pages/Prerendered.tsx","components/LanguageButton.tsx","components/AppBar.tsx","components/SearchList.tsx","App.tsx","reportWebVitals.ts","i18n.ts","index.tsx"],"names":["searchOptions","keys","name","weight","Store","items","fuse","this","Fuse","whatStore","Map","fetchSearchIndex","language","a","has","fetch","process","response","json","store","set","get","ToolBarList","history","useHistory","useTranslation","t","i18n","useState","setItems","useEffectOnce","then","it","List","ListItem","button","component","href","ListItemIcon","ListItemText","primary","onClick","selectedItem","Math","floor","random","length","replace","path","Divider","Description","languageItems","setLanguageItems","Typography","variant","gutterBottom","useStyles","makeStyles","root","minWidth","title","fontSize","DoYouKnow","doYouKnow","setDoYouKnow","setInterval","classes","Card","className","CardContent","color","CardActions","Button","size","disableElevation","Index","fallback","Page","prop","html","setHtml","decodeURIComponent","page","text","newHtml","dangerouslySetInnerHTML","__html","Prerendered","useParams","LanguageButton","anchorEl","setAnchorEl","closeMenu","changeLanguage","languageCode","window","location","reload","aria-controls","aria-haspopup","event","currentTarget","console","error","getLanguageName","id","keepMounted","open","Boolean","onClose","MenuItem","theme","toolbar","paddingRight","flexGrow","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","display","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","breakpoints","up","spacing","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","AppBar","handleDrawerOpen","onSearch","clsx","Toolbar","IconButton","edge","aria-label","noWrap","InputBase","placeholder","input","inputProps","onChange","target","value","createStyles","maxWidth","background","paper","notFound","SearchList","to_search","setStore","searchResult","map","item","toolbarIcon","mixins","drawerPaper","whiteSpace","drawerPaperClose","overflowX","appBarSpacer","content","overflow","container","paddingTop","paddingBottom","flexDirection","fixedHeight","backdrop","App","setOpen","setSearch","CssBaseline","Drawer","Backdrop","Container","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","backend","loadPath","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9eb985ee.chunk.js","sourcesContent":["import Fuse from \"fuse.js\";\n\nexport interface SearchIndex {\n    name: string,\n    aliases: Array<string>,\n    content_for_search: string,\n    path: string\n}\n\nconst searchOptions = {\n    keys: [{\n        name: 'name',\n        weight: 0.45\n    }, {\n        name: 'aliases',\n        weight: 0.4\n    }, {\n        name: 'content_for_search',\n        weight: 0.15\n    }],\n}\n\nexport class Store {\n    public readonly fuse: Fuse<SearchIndex>;\n\n    constructor(public readonly items: Array<SearchIndex>) {\n        this.fuse = new Fuse(items, searchOptions);\n    }\n}\n\nexport let whatStore: Map<string, Store> = new Map();\n\nexport async function fetchSearchIndex(language: string) {\n    if (!whatStore.has(language)) {\n        const response = await fetch(process.env.PUBLIC_URL + `/data/${language}/index.json`);\n        const store = new Store(await response.json());\n        whatStore.set(language, store);\n    }\n    return whatStore.get(language);\n}\n\n","import {Divider, List, ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport HomeIcon from '@material-ui/icons/Home';\nimport CasinoIcon from '@material-ui/icons/Casino';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport HelpIcon from '@material-ui/icons/Help';\nimport InfoIcon from '@material-ui/icons/Info';\nimport RoomIcon from '@material-ui/icons/Room';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport {fetchSearchIndex, SearchIndex} from \"../model/searchIndex\";\nimport {useEffectOnce} from \"react-use\";\nimport {useHistory} from \"react-router\";\n\nexport function ToolBarList() {\n    const history = useHistory();\n    const {t, i18n} = useTranslation();\n    const [items, setItems] = useState<Array<SearchIndex>>([]);\n    useEffectOnce(() => {\n        fetchSearchIndex(i18n.language).then(it => {\n            setItems(it!.items);\n        });\n    });\n    return (\n        <List>\n            <ListItem button component=\"a\" href={process.env.PUBLIC_URL + \"/\"}>\n                <ListItemIcon>\n                    <HomeIcon/>\n                </ListItemIcon>\n                <ListItemText primary={t('Home')}/>\n            </ListItem>\n            <ListItem button component=\"a\" onClick={() => {\n                const selectedItem = items[Math.floor(Math.random() * items.length)];\n                history.replace(`/prerendered/${selectedItem?.path}`)\n            }}>\n                <ListItemIcon>\n                    <CasinoIcon/>\n                </ListItemIcon>\n                <ListItemText primary={t('Random')}/>\n            </ListItem>\n            <Divider/>\n            <ListItem button>\n                <ListItemIcon>\n                    <FormatListNumberedIcon/>\n                </ListItemIcon>\n                <ListItemText primary={t('How')}/>\n            </ListItem>\n            <ListItem button>\n                <ListItemIcon>\n                    <HelpIcon/>\n                </ListItemIcon>\n                <ListItemText primary={t('Why')}/>\n            </ListItem>\n            <ListItem button>\n                <ListItemIcon>\n                    <RoomIcon/>\n                </ListItemIcon>\n                <ListItemText primary={t('Where')}/>\n            </ListItem>\n            <ListItem button>\n                <ListItemIcon>\n                    <QuestionAnswerIcon/>\n                </ListItemIcon>\n                <ListItemText primary={t('WhatIf')}/>\n            </ListItem>\n            <Divider/>\n            <ListItem button component=\"a\" onClick={() => {\n                history.replace(`/prerendered/about%2Findex.htmlpart`)\n            }}>\n                <ListItemIcon>\n                    <InfoIcon/>\n                </ListItemIcon>\n                <ListItemText primary={t('Info')}/>\n            </ListItem>\n        </List>\n    );\n}","import React, {useState} from \"react\";\nimport {Typography} from \"@material-ui/core\";\nimport {fetchSearchIndex, SearchIndex} from \"../model/searchIndex\";\nimport {useTranslation} from \"react-i18next\";\nimport {useEffectOnce} from \"react-use\";\n\nexport function Description() {\n    const {t, i18n} = useTranslation();\n    let [languageItems, setLanguageItems] = useState<Array<SearchIndex>>([]);\n    useEffectOnce(() => {\n        fetchSearchIndex(i18n.language).then(it => setLanguageItems(it!.items));\n    });\n    return (\n        <div>\n            <Typography variant=\"h3\" component=\"h4\" gutterBottom>\n                Welcome to Tipedia\n            </Typography>\n            <Typography variant=\"h6\" gutterBottom>\n                the free encyclopedia for TiDB and related works\n            </Typography>\n            <Typography gutterBottom>\n                {t(\"All\")} {languageItems.length} {t(\"items\")}\n            </Typography>\n        </div>\n    );\n}","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {useTranslation} from \"react-i18next\";\nimport {fetchSearchIndex, SearchIndex} from '../model/searchIndex';\nimport {useEffectOnce} from 'react-use';\nimport {useHistory} from \"react-router\";\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 400,\n    },\n    title: {\n        fontSize: 14,\n    },\n});\n\nexport default function DoYouKnow() {\n    const {t, i18n} = useTranslation();\n    const history = useHistory();\n    const [doYouKnow, setDoYouKnow] = useState<SearchIndex | null>(null);\n    useEffectOnce(() => {\n            fetchSearchIndex(i18n.language).then(it => {\n                const items = it?.items || [];\n                setDoYouKnow(items[Math.floor(Math.random() * items.length)]);\n                setInterval((() => {\n                    setDoYouKnow(items[Math.floor(Math.random() * items.length)]);\n                }), 3000);\n            });\n        }\n    );\n\n    const classes = useStyles();\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                    {t(\"DoYouKnow\")}\n                </Typography>\n                <Typography>\n                    {t(\"DoYouKnowWhatIs\")}\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                    {doYouKnow?.name}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\"\n                        variant=\"contained\"\n                        onClick={() => {\n                            history.replace(`/prerendered/${doYouKnow?.path}`)\n                        }}\n                        disableElevation>\n                    {t(\"FindOutHere\")}\n                </Button>\n            </CardActions>\n        </Card>\n    );\n}\n","import React, {Suspense} from \"react\";\nimport {Description} from \"../components/Description\";\nimport DoYouKnow from \"../components/DoYouKnow\";\n\nexport function Index() {\n    return (\n        <Suspense fallback=\"loading\">\n            <Description/>\n            <DoYouKnow/>\n        </Suspense>\n    )\n}","import React, {useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nexport function Page(prop: { path: string }) {\n    const [html, setHtml] = useState(\"\");\n    const {i18n} = useTranslation();\n    const path = decodeURIComponent(prop.path);\n    (async () => {\n        let page = await fetch(process.env.PUBLIC_URL + `/data/${i18n.language}/${path}`);\n        let newHtml = await page.text();\n        setHtml(newHtml);\n    })();\n    return (\n        <div className=\"page\" dangerouslySetInnerHTML={{__html: html}}/>\n    );\n}\n","import {useParams} from \"react-router\";\nimport {Page} from \"../components/Page\";\nimport React, {Suspense} from \"react\";\n\nexport function Prerendered() {\n    let {path} = useParams<{ path: string }>();\n    return (\n        <Suspense fallback=\"loading\">\n            <Page path={path}/>\n        </Suspense>\n    )\n}","import {Button, Menu, MenuItem} from \"@material-ui/core\";\nimport TranslateIcon from \"@material-ui/icons/Translate\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport React, {useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nexport function LanguageButton() {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const {i18n} = useTranslation();\n\n    const handleClick = (event: any) => setAnchorEl(event.currentTarget);\n    const closeMenu = () => {\n        setAnchorEl(null);\n    }\n    const changeLanguage = (languageCode: string) => {\n        if (languageCode !== null) {\n            i18n.changeLanguage(languageCode).then(() => window.location.reload());\n        }\n        closeMenu();\n    };\n    const getLanguageName = (languageCode: string) => {\n        switch (languageCode) {\n            case \"zh\":\n            case \"zh-CN\":\n                return \"中文\"\n            case \"en\":\n                return \"English\"\n            default:\n                console.error(languageCode);\n        }\n    };\n\n    return (\n        <>\n            <Button color=\"inherit\" aria-controls=\"language-menu\" aria-haspopup=\"true\"\n                    onClick={handleClick}>\n                <TranslateIcon/>\n                &nbsp;\n                <span>{getLanguageName(i18n.language)}</span>\n                &nbsp;\n                <ExpandMoreIcon/>\n            </Button>\n            <Menu\n                id=\"language-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={closeMenu}\n            >\n                <MenuItem\n                    key=\"zh\"\n                    onClick={() => changeLanguage(\"zh\")}>\n                    中文\n                </MenuItem>\n                <MenuItem\n                    key=\"en\"\n                    onClick={() => changeLanguage(\"en\")}>\n                    English\n                </MenuItem>\n            </Menu>\n        </>\n    )\n}","import clsx from \"clsx\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {AppBar as MuiAppBar, fade, InputBase} from \"@material-ui/core\";\nimport React, {MouseEventHandler, Suspense} from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {LanguageButton} from \"./LanguageButton\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    title: {\n        flexGrow: 1,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        minWidth: 300,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    }\n}));\n\ninterface Props {\n    handleDrawerOpen: MouseEventHandler<any>,\n    open: boolean,\n    onSearch: (_: string) => void\n}\n\nexport function AppBar({handleDrawerOpen, open, onSearch}: Props) {\n    const classes = useStyles();\n    return (\n        <MuiAppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n            <Toolbar className={classes.toolbar}>\n                <IconButton\n                    edge=\"start\"\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={handleDrawerOpen}\n                    className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n                >\n                    <MenuIcon/>\n                </IconButton>\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                    Tipedia\n                </Typography>\n                <Suspense fallback=\"loading\">\n                    <LanguageButton/>\n                </Suspense>\n                <div className={classes.search}>\n                    <div className={classes.searchIcon}>\n                        <SearchIcon/>\n                    </div>\n                    <InputBase\n                        placeholder=\"Search…\"\n                        classes={{root: classes.inputRoot, input: classes.inputInput}}\n                        inputProps={{'aria-label': 'search'}}\n                        onChange={event => onSearch(event.target.value)}\n                    />\n                </div>\n                <IconButton href=\"https://github.com/longfangsong/tipedia\" color=\"inherit\">\n                    <GitHubIcon/>\n                </IconButton>\n            </Toolbar>\n        </MuiAppBar>\n    )\n}","import React, {useState} from \"react\";\nimport {createStyles, List, ListItem, ListItemText, makeStyles, Theme} from \"@material-ui/core\";\nimport {useEffectOnce} from \"react-use\";\nimport {fetchSearchIndex, Store} from \"../model/searchIndex\";\nimport {useTranslation} from \"react-i18next\";\nimport {useHistory} from \"react-router\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            maxWidth: 360,\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.text.primary\n        },\n        notFound: {\n            color: \"#818181\"\n        }\n    }),\n);\n\nexport function SearchList({to_search}: { to_search: string }) {\n    const history = useHistory();\n    const {i18n} = useTranslation();\n    const [store, setStore] = useState<Store | null>(null);\n    const classes = useStyles();\n    useEffectOnce(() => {\n            fetchSearchIndex(i18n.language).then(it => {\n                setStore(it || null)\n            });\n        }\n    );\n\n    const items = () => {\n        const searchResult = store?.fuse.search(to_search);\n        if (searchResult?.length === 0) {\n            return <ListItem className={classes.notFound}>无结果</ListItem>\n        } else {\n            return (\n                <>\n                    {\n                        searchResult?.map(it => {\n                            return (\n                                <ListItem key={it.item.name} button component=\"a\"\n                                          onClick={() => {\n                                              history.replace(`/prerendered/${it.item.path}`)\n                                          }}>\n                                    <ListItemText primary={it.item.name}/>\n                                </ListItem>\n                            )\n                        })\n                    }\n                </>\n            );\n        }\n    }\n\n    return (\n        <List className={classes.root}>\n            {items()}\n        </List>\n    );\n}","import React, {Suspense, useState} from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport {ToolBarList} from \"./components/ToolBarList\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {Index} from './pages/Index';\nimport {Prerendered} from \"./pages/Prerendered\";\nimport {AppBar} from \"./components/AppBar\";\nimport {SearchList} from './components/SearchList';\nimport {Backdrop} from \"@material-ui/core\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer - 1,\n        color: \"white\",\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n    const [open, setOpen] = useState(true);\n    const [search, setSearch] = useState(\"\");\n    const handleDrawerOpen = () => setOpen(true);\n    const handleDrawerClose = () => setOpen(false);\n    const handleBackDropClose = () => setSearch(\"\");\n    return (\n        <Router>\n            <div className={classes.root}>\n                <CssBaseline/>\n                <AppBar handleDrawerOpen={handleDrawerOpen} open={open} onSearch={setSearch}/>\n                <Drawer variant=\"permanent\"\n                        classes={{paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)}} open={open}>\n                    <div className={classes.toolbarIcon}>\n                        <IconButton onClick={handleDrawerClose}>\n                            <ChevronLeftIcon/>\n                        </IconButton>\n                    </div>\n                    <Divider/>\n                    <Suspense fallback=\"loading\">\n                        <ToolBarList/>\n                    </Suspense>\n                </Drawer>\n                <main className={classes.content}>\n                    <Backdrop className={classes.backdrop} open={search !== \"\"} onClick={handleBackDropClose}>\n                        <Suspense fallback=\"loading\">\n                            <SearchList to_search={search}/>\n                        </Suspense>\n                    </Backdrop>\n                    <div className={classes.appBarSpacer}/>\n                    <Container maxWidth=\"lg\" className={classes.container}>\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <Index/>\n                            </Route>\n                            <Route path=\"/prerendered/:path\">\n                                <Prerendered/>\n                            </Route>\n                        </Switch>\n                    </Container>\n                </main>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\ni18n.use(Backend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        fallbackLng: 'en',\n        debug: process.env.NODE_ENV === 'development',\n\n        interpolation: {\n            escapeValue: false,\n        },\n        backend: {\n            loadPath: process.env.PUBLIC_URL + '/locales/{{lng}}/{{ns}}.json',\n        }\n    });\n\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}